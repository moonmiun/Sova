R.version
install.packages("C:/Users/flavi/Desktop/Programming/Sova", repos = NULL, type = "source")
old_lib <- "C:/path/to/R/4.3.3/library"  # Cambia con il percorso corretto
.libPaths()
new_lib <- "C:/Users/flavi/AppData/Local/R/win-library/4.4"
old_lib <- "C:/Users/flavi/AppData/Local/R/win-library/4.3"  # Cambia con il percorso corretto
old_packages <- installed.packages(lib.loc = old_lib)[, "Package"]
old_packages
new_lib <- .libPaths()[1]  # La directory della libreria per la nuova versione di R
install.packages(old_packages, lib = new_lib)
install.packages("C:/Users/flavi/Desktop/Programming/Sova", repos = NULL, type = "source")
library(Gviz)
install.packages("GViz")
BiocManager::install.packages("GViz")
BiocManager::install("GViz")
2
BiocManager::install("Gviz")
BiocManager::install("Gviz")
BiocManager::install("Gviz")library(Gviz)
library(Gviz)
library(S4Vectors)
library(IRanges)
library(GenomicRanges)
install.packages("C:/Users/flavi/Desktop/Programming/Sova", repos = NULL, type = "source")
library(hms)
BiocManager::install("hms")
library(hms)
install.packages("C:/Users/flavi/Desktop/Programming/Sova", repos = NULL, type = "source")
required_packages <- c("Biostrings", "biomaRt", "Gviz", "IRanges", "S4Vectors", "GenomicRanges", "hms")
install_and_load <- function(packages) {
for (pkg in packages) {
if (!requireNamespace(pkg, quietly = TRUE)) {
if (pkg %in% rownames(BiocManager::available())) {
BiocManager::install(pkg)
} else {
install.packages(pkg)
}
}
library(pkg, character.only = TRUE)
}
}
install_and_load(required_packages)
for (pkg in required_packages) {
if (!requireNamespace(pkg, quietly = TRUE)) {
if (pkg %in% rownames(BiocManager::available())) {
BiocManager::install(pkg)
} else {
install.packages(pkg)
}
}
library(pkg, character.only = TRUE)
}
for (pkg in required_packages) {
if (!requireNamespace(pkg, quietly = TRUE)) {
if (pkg %in% rownames(BiocManager::available())) {
BiocManager::install(pkg)
} else {
install.packages(pkg)
}
}
library(pkg, character.only = TRUE)
}
for (pkg in required_packages) {
if (!requireNamespace(pkg, quietly = TRUE)) {
# Controlla se il pacchetto è su Bioconductor
if (pkg %in% rownames(BiocManager::available.packages())) {
BiocManager::install(pkg)  # Installa da Bioconductor
} else {
install.packages(pkg)  # Installa da CRAN
}
}
# Carica il pacchetto
library(pkg, character.only = TRUE)
}
remove.packages("Biostrings")
for (pkg in required_packages) {
if (!requireNamespace(pkg, quietly = TRUE)) {
# Controlla se il pacchetto è su Bioconductor
if (pkg %in% rownames(BiocManager::available.packages())) {
BiocManager::install(pkg)  # Installa da Bioconductor
} else {
install.packages(pkg)  # Installa da CRAN
}
}
# Carica il pacchetto
library(pkg, character.only = TRUE)
}
remove.packages("Biostrings")
required_packages <- c("Biostrings", "biomaRt", "Gviz", "IRanges", "S4Vectors", "GenomicRanges", "hms")
for (pkg in required_packages) {
if (!requireNamespace(pkg, quietly = TRUE)) {
# Controlla se il pacchetto è su Bioconductor
if (pkg %in% rownames(BiocManager::available.packages())) {
BiocManager::install(pkg)  # Installa da Bioconductor
} else {
install.packages(pkg)  # Installa da CRAN
}
}
# Carica il pacchetto
library(pkg, character.only = TRUE)
}
for (pkg in required_packages) {
if (!requireNamespace(pkg, quietly = TRUE)) {
# Ottieni tutti i pacchetti disponibili da Bioconductor
bioc_packages <- rownames(available.packages(contrib.url(BiocManager::repositories())))
if (pkg %in% bioc_packages) {
BiocManager::install(pkg)  # Installa da Bioconductor
} else {
install.packages(pkg)  # Installa da CRAN
}
}
# Carica il pacchetto
library(pkg, character.only = TRUE)
}
Before the user installs Sova and loads it, it is recommended to install the packages it depends on. First, if the user doesn't have BiocManager, it is needed to install it:
remove.packages("Sova")
setwd('C:/Users/flavi/Desktop/Programming/Sova')
roxygen2::roxygenize()
